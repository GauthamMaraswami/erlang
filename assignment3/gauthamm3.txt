4> gauthamm3:for(0, fun(X) -> X < 10 end, fun(X) -> X+1 end, fun(X) ->io:format("~w~n", [X]) end).
0
1
2
3
4
5
6
7
8
9
ok
5> gauthamm3:indexInListbypredicate([20,10,30,40], 10, fun(X,Y) ->X =:= Y end).
1
6> gauthamm3:indexInListbypredicate([20,10,30,40], 50, fun(X,Y) ->X =:= Y end). 
not_found
7> gauthamm3:indexInListbypredicate([20,10,3,40], 20, fun(X,Y) ->X-Y =:= 17 end).
2
9> gauthamm3:forAll([20,10,2,34,28],fun(X)->X>=1 end).
true
10> gauthamm3:forAll([20,10,2,34,28],fun(X)->X>=10 end).
false
11> gauthamm3:thereExists([20,10,2,34,28],fun(X)->X>=10 end).
true
12> gauthamm3:thereExists([20,10,2,34,28],fun(X)->X>=50 end).
false
13> gauthamm3:thereExists1([20,10,2,34,28],fun(X)->X>=10 end).
false
14> gauthamm3:thereExists1([20,10,2,34,28],fun(X)->X>=30 end).
true
16> gauthamm3:foldl(fun(X,Y) -> X + Y end,0, lists:seq(1,100)).   
5050
17> gauthamm3:foldr(fun(X,Y) -> X + Y end,0, lists:seq(1,100)).
5050
18> gauthamm3:remdupsr([1,2,2,3,3,3,1,1]).                     
[1,3,2,1]

20> gauthamm3:remdups([1,2,2,3,3,3,1,1]). 
[1,2,3,1]
